// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: group.sql

package db

import (
	"context"
)

const createGroup = `-- name: CreateGroup :one
INSERT INTO groups (
  name, account,owner
) VALUES (
  $1, $2,$3
)
RETURNING id, name, account, owner, created_at
`

type CreateGroupParams struct {
	Name    string `json:"name"`
	Account string `json:"account"`
	Owner   string `json:"owner"`
}

func (q *Queries) CreateGroup(ctx context.Context, arg CreateGroupParams) (Group, error) {
	row := q.db.QueryRowContext(ctx, createGroup, arg.Name, arg.Account, arg.Owner)
	var i Group
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Account,
		&i.Owner,
		&i.CreatedAt,
	)
	return i, err
}

const getGroup = `-- name: GetGroup :one
SELECT id, name, account, owner, created_at FROM groups
WHERE account = $1
`

func (q *Queries) GetGroup(ctx context.Context, account string) (Group, error) {
	row := q.db.QueryRowContext(ctx, getGroup, account)
	var i Group
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Account,
		&i.Owner,
		&i.CreatedAt,
	)
	return i, err
}
