// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"time"
)

type Apply struct {
	ID               int64  `json:"id"`
	ApplicateAccount string `json:"applicate_account"`
	TargetAccount    string `json:"target_account"`
	// 消息类型:1为直接添加,2为请求添加,3为同意添加,4拒绝添加
	AType int32 `json:"a_type"`
	// 0:未同意,1:已同意
	Status int32 `json:"status"`
	// 0.用户, 1:群组
	Object int32 `json:"object"`
}

type Friend struct {
	ID           int64     `json:"id"`
	FUserAccount string    `json:"f_user_account"`
	TUserAccount string    `json:"t_user_account"`
	CreatedAt    time.Time `json:"created_at"`
}

type Group struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	Account   string    `json:"account"`
	Owner     string    `json:"owner"`
	CreatedAt time.Time `json:"created_at"`
}

type GroupMember struct {
	ID int64 `json:"id"`
	// 群内昵称应该是唯一的
	Name         string    `json:"name"`
	GroupAccount string    `json:"group_account"`
	UserAccount  string    `json:"user_account"`
	CreatedAt    time.Time `json:"created_at"`
}

type Message struct {
	ID              int64  `json:"id"`
	Content         string `json:"content"`
	FromUserAccount string `json:"from_user_account"`
	ToUserAccount   string `json:"to_user_account"`
	GroupAccount    string `json:"group_account"`
	// 消息类型:0系统消息,1为私人消息,2为群消息
	MType int32 `json:"m_type"`
	// 0为在线,1为离线
	Networkstatus int32     `json:"networkstatus"`
	CreatedAt     time.Time `json:"created_at"`
}

type User struct {
	ID                int64     `json:"id"`
	Username          string    `json:"username"`
	HashedPassword    string    `json:"hashed_password"`
	Phone             string    `json:"phone"`
	Account           string    `json:"account"`
	Token             string    `json:"token"`
	AccountChangedAt  time.Time `json:"account_changed_at"`
	PhoneChangedAt    time.Time `json:"phone_changed_at"`
	UsernameChangedAt time.Time `json:"username_changed_at"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
}
